searchState.loadedDescShard("ledger_sim", 0, "Rust wrapper for executing Speculos via local install or …\nButton actions\nButton enumeration\nSimulator display mode\nRun Speculos via docker container\nDocker-based Speculos driver\nHandle to a Speculos instance running under Docker\n<code>Driver</code> trait for speculos providers\nMode selector for generic drivers\nGeneric driver helper, allows implementations to be …\nGeneric Handle helper for use with GenericDriver\nHandle trait for interacting with speculos\nHeadless mode\nRun Speculos as child process (requires that <code>speculos.py</code> …\nLocal (child process) based speculos driver\nHandle to a speculos instance running locally (as a child …\nDevice model\nNano S\nNano S Plus\nNano X\nSimulator options\nQT based rendering\nText based (command line) rendering\nGet speculos HTTP address\nEnable APDU TCP port (usually 1237)\nAPI level override\nBuild an argument list from Options\nSend a button action to the simulator\nSend a button action to the simulator\nEnable debugging and wait for GDB connection (port 1234)\nCreate a new LocalDriver\nDisplay mode\nBuild environmental variable list from Options\nExit task\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEnable HTTP API port\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModel to simulate\nCreate a new LocalDriver\nCreate a new docker driver\nCreate a new GenericDriver with the specified DriverMode\nSpeculos root (used to configure python paths if set)\nRun speculos with the specified app and options\nFetch a screenshot from the simulator\nFetch a screenshot from the simulator\nSDK version override (defaults based on –model)\nBIP39 seed for initialisation\nFetch target name for a given ledger model\nTrace syscalls\nWait for task exit / completion")